{"version":3,"file":"static/js/531.8b2eceec.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","fetchApi/fetchApi.js","pages/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;","import { SpinnerRoundOutlined } from 'spinners-react';\nimport { SpinnerWrapper } from './Loader.styled';\n\nconst Loader = () => (\n    <SpinnerWrapper>\n       <SpinnerRoundOutlined\n      size={50}\n      thickness={100}\n      speed={100}\n      color=\"#36ad47\"\n    />\n    </SpinnerWrapper>\n);\n\nexport default Loader;\n\n\n","import axios from 'axios';\n\nconst API_KEY = '3b94c1b54af7d429587ecf26a37007c0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendCollection() {\n    return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    };\n\nexport async function fetchMovieByKeyWord(value) {\n    return await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`);\n};\n\nexport async function fetchMovieById(filmId) {\n  return await axios.get(`${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`);  \n};\n\n\n\nexport async function fetchMovieCredits(movieId) {\n  return await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n \n\nexport async function fetchMovieReviews(movieId) {\n  return await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);  \n};\n","import styled from 'styled-components';\nimport { Link, NavLink} from \"react-router-dom\";\n\nexport const Main = styled.main`\n    padding: 20px;\n`;\n\nexport const Box = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const Img = styled.img`\ndisplay: block;\nwidth: 100%;\nheight: auto;\n`;\n\nexport const Div1 = styled.div`\nmax-width: 250px;\n`;\n\nexport const Div2 = styled.div`\npadding-left: 20px;\n`;\n\nexport const Button = styled.button`\nmargin-bottom: 10px;\n    background-color: darkgoldenrod;\n    border: none;\n    border-radius: 5px;\n    height: 25px;\n    opacity: 0.8;\n\n    &:hover, &:focus {\n    opacity: 1;\n  }\n    `;\n\nexport const LinkStyled = styled(Link)`\ncolor: black;\n`;\n\nexport const LinkStyledAddIn = styled(NavLink)`\n&.active {\n    color: tomato;\n}    \n`;\n\n","import { useState, useEffect, useRef } from \"react\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { fetchMovieById } from '../fetchApi/fetchApi';\nimport { Toaster, toast } from 'react-hot-toast';\nimport Loader from '../components/Loader';\nimport { Main, Box, Div1, Div2, Img, LinkStyled, Button, LinkStyledAddIn } from './MovieDetailsPage.styled';\nimport { FaArrowLeft } from 'react-icons/fa';\n\n\nconst noPosterImg = 'https://sd.keepcalms.com/i/sorry-no-picture-available-2.png';\n\n\nexport function MovieDetailsPage() {\n    const { moviesId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n    const grandPath = useRef(location);\n\n    \n    useEffect(() => {\n\n        setLoading(true);    \n        \n        fetchMovieById(moviesId).then(data => {\n            const { data: { poster_path, title, name, overview, vote_average, genres } } = data;                \n               \n                                               \n            setMovie({\n                poster: poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg,\n                title,\n                name,\n                overview: overview ? overview : \"There is no overview\",\n                vote_average,\n                genresValues: (genres.length === 0) ?\n                    \"There are no genres\" :\n                    (genres.map(({ name }) => (\n                        [name]\n                    )).join(\", \"))\n            });\n\n        })\n            \n            .catch(error => {\n                console.log('Whoops, something went wrong...', error);\n                return toast.error('There is no film. Try another request...');\n            })\n\n            .finally(() => setTimeout(() => {\n                setLoading(false);\n            }, 1000));       \n        \n    }, [moviesId]);\n    \n      \n\n    return (\n        \n        <Main>\n            \n            <Toaster position=\"top-right\" />\n            {loading && <Loader />}\n            \n            <Button type=\"button\"><LinkStyled to={grandPath.current?.state?.from ?? `/`} state={{ from: grandPath.current }}><FaArrowLeft />Go back</LinkStyled></Button>\n                \n            {movie && (\n                <Box>\n                    <Div1>\n                        <Img src={movie.poster} alt={movie.title ? movie.title : movie.name} />\n                    </Div1>\n                    <Div2>\n                    <h1>{movie.title ? movie.title : movie.name}</h1>\n                    <p>User Score: {movie.vote_average * 10}%</p>\n                    <h2>Overview</h2>\n                    <p>{movie.overview}</p>\n                    <h3>Genres</h3>\n                    <p>{movie.genresValues}</p>\n                    </Div2>      \n                </Box>                    \n            )}\n\n            <hr />\n\n            <h3>Additional information</h3>\n\n             <ul>\n          <li>\n            <LinkStyledAddIn to={`/movies/${moviesId}/cast`} >\n              Cast\n            </LinkStyledAddIn>\n          </li>\n          <li>\n            <LinkStyledAddIn to={`/movies/${moviesId}/reviews`} >\n              Reviews\n            </LinkStyledAddIn>\n          </li>\n            </ul>\n            \n            <hr/>            \n            \n            <Outlet/>\n            \n                                          \n        </Main>\n    )\n};"],"names":["SpinnerWrapper","styled","SpinnerRoundOutlined","size","thickness","speed","color","API_KEY","BASE_URL","fetchTrendCollection","axios","fetchMovieByKeyWord","value","fetchMovieById","filmId","fetchMovieCredits","movieId","fetchMovieReviews","Main","Box","Img","Div1","Div2","Button","LinkStyled","Link","LinkStyledAddIn","NavLink","MovieDetailsPage","moviesId","useParams","useState","movie","setMovie","loading","setLoading","location","useLocation","grandPath","useRef","useEffect","then","data","poster_path","title","name","overview","vote_average","genres","poster","genresValues","length","map","join","catch","error","console","log","toast","finally","setTimeout","position","Loader","type","to","current","state","from","src","alt"],"sourceRoot":""}