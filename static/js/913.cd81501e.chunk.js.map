{"version":3,"file":"static/js/913.cd81501e.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","fetchApi/fetchApi.js","pages/HomePage.styled.jsx","pages/HomePage.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage.styled.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;","import { SpinnerWrapper } from './Loader.styled';\nimport { CircularProgress } from '@mui/material';\n\nconst Loader = () => (\n  <SpinnerWrapper>\n    <CircularProgress />       \n  </SpinnerWrapper>\n);\n\nexport default Loader;\n\n\n","import axios from 'axios';\n\nconst API_KEY = '3b94c1b54af7d429587ecf26a37007c0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendCollection() {\n    return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    };\n\nexport async function fetchMovieByKeyWord(value) {\n    return await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`);\n};\n\nexport async function fetchMovieById(filmId) {\n  return await axios.get(`${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`);  \n};\n\n\n\nexport async function fetchMovieCredits(movieId) {\n  return await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n \n\nexport async function fetchMovieReviews(movieId) {\n  return await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);  \n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n    padding: 0 20px;\n`;\n\nexport const UlHome = styled.ul`\n  padding: 0;\n  margin-left: -20px;\n  margin-top: -20px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  list-style: none;\n    `;\n\nexport const LinkHome = styled(Link)`\n  padding: 0;\n  width: 100%;\n  text-decoration: none;\n  color: black;\n`;\n\nexport const LiHome = styled.li`\n  margin-left: 20px;\n  margin-top: 20px;\n  max-width: 280px;\n  flex-basis: calc(100% - 20px);\n  border-radius: 5px;\n  overflow: hidden;\n  background: #fafafa;\n  transition: all 500ms ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ImgHome = styled.img`\ndisplay: block;\nwidth: 100%;\nheight: 398px;\nobject-fit: cover;\n`;\n\nexport const PHome = styled.p`\n  margin-top: 12px;\n  padding: 0 4px;\n  text-align: center;\n  font-weight: 700;\n  line-height: 1.33;\n  text-transform: uppercase;\n`;\n\nexport const H1 = styled.h1`\ntext-align: center;\n`;","import { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { fetchTrendCollection } from '../fetchApi/fetchApi';\nimport Loader from '../components/Loader';\nimport { Main, UlHome, LinkHome, ImgHome, LiHome, PHome, H1 } from './HomePage.styled';\n\n\nexport const noPosterImg = 'https://sd.keepcalms.com/i/sorry-no-picture-available-2.png';\n\n\n\nexport function HomePage() {\n    const [movies, setMovies] = useState([]);\n    const [errorM, setErrorM] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n    \n\n    \n    useEffect(() => {\n        setLoading(true);\n        \n        fetchTrendCollection().then(data => {\n            const { data: { results } } = data;\n            setMovies(results);\n        })\n            \n            .catch(error => {\n                setErrorM(error)\n            })\n            \n            .finally(() => {\n                setTimeout(() => {\n                    setLoading(false)\n                }, 1000)\n            }); \n\n    }, []);\n\n\n    return (\n        <Main>\n             {loading && <Loader/>}\n            <H1>Trending today</H1>\n            <UlHome>\n                {movies.map(({id, title, name, poster_path}) => (\n                    <LiHome key={id}>\n                        <LinkHome to={`/movies/${id}`} state={{ from: location }}>                            \n                                <ImgHome src={poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg} alt={title ? title : name} />\n                                <PHome>{title ? title : name}</PHome>                           \n                        </LinkHome>\n                    </LiHome>\n                ))}\n            </UlHome>\n            {errorM && <h2>Whoops, something went wrong: error.</h2>}\n            </Main>\n    )\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n     padding: 20px;\n`;\n\nexport const Form = styled.form`\n    display: flex;\n    align-items: center;\n`;\n\nexport const Input = styled.input`\n display: inline-block;\n    margin-right: 15px;\n    width: 20%;\n    border-radius: 5px;\n    font-size: 16px;\n    outline: none;\n    border-color: dimgrey;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 14px;\n  }\n`;\n\nexport const Button = styled.button`\ndisplay: inline-block;\n    width: 10%;\n    height: 29px;\n    border: 0;\n    cursor: pointer;\n    outline: none;\n    opacity: 0.8;\n    background-color: forestgreen;\n    border-radius: 5px;\n\n     &:hover, &:focus {\n    opacity: 1;\n  }\n`;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport { Box, Form, Input, Button } from './Searchbar.styled';\n\n\nfunction Searchbar({propSubmit}) {\nconst [inputFilmValue, setInputFilmValue] = useState('');\n\n    const handleChange = e => {\n    const { value } = e.currentTarget;\n\n    setInputFilmValue(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (inputFilmValue.trim() === '') {\n      toast.error('Please, fill in the field of search');\n      return;\n    }\n\n    propSubmit(inputFilmValue);\n\n    setInputFilmValue('');\n  };\n\n  return (\n     <Box>\n        <Form onSubmit={handleSubmit}>\n           <Input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies by keyword\"\n            value={inputFilmValue}\n            onChange={handleChange}\n                  />\n            <Button type=\"submit\">\n           Search\n          </Button>\n        </Form>\n      </Box>    \n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  propSubmit: PropTypes.func.isRequired,\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const UlMovies = styled.ul`\n  padding: 0;\n  margin-left: -20px;\n  margin-top: -20px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  list-style: none;\n    `;\n\nexport const LinkMovies = styled(Link)`\n  padding: 0;\n  width: 100%;\n  text-decoration: none;\n  color: black;\n`;\n\nexport const LiMovies = styled.li`\n  margin-left: 20px;\n  margin-top: 20px;\n  max-width: 280px;\n  flex-basis: calc(100% - 20px);\n  border-radius: 5px;\n  overflow: hidden;\n  background: #fafafa;\n  transition: all 500ms ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ImgMovies = styled.img`\ndisplay: block;\nwidth: 100%;\nheight: 398px;\nobject-fit: cover;\n`;\n\nexport const PMovies = styled.p`\n  margin-top: 12px;\n  padding: 0 4px;\n  text-align: center;\n  font-weight: 700;\n  line-height: 1.33;\n  text-transform: uppercase;\n`;","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { Toaster, toast } from 'react-hot-toast';\nimport Searchbar from '../components/Searchbar';\nimport { fetchMovieByKeyWord } from '../fetchApi/fetchApi';\nimport Loader from '../components/Loader';\nimport { noPosterImg } from './HomePage';\nimport { UlMovies, LinkMovies, LiMovies, ImgMovies, PMovies } from './MoviesPage.styled';\n\n\n\nexport function MoviesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [errorM, setErrorM] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const searchFilmValue = searchParams.get('value');\n  const location = useLocation();\n\n  \n\n     const addSearchValue = formData => {\n     setSearchParams({value: formData})   \n  };\n\n    useEffect(() => {\n         if (searchFilmValue === '') {\n      return;\n        };\n        \n      if (searchFilmValue) {\n          \n        setLoading(true);\n        \n        \n        fetchMovieByKeyWord(searchFilmValue)\n          .then(data => {\n          const { data: { results } } = data;\n\n          if (results.length === 0) {\n            return toast.error('Sorry, there are no movies. Try another request...');\n          };\n\n          setMovies(results);\n          })\n          \n          .catch(error => {\n            setErrorM(error);\n        \n          })\n          \n          .finally(() => {\n            setTimeout(() => {\n              setLoading(false);\n            }, 1000)\n          });   \n      }         \n    }, [searchFilmValue]);\n\n    return (\n    <div>\n      <Toaster position=\"top-right\" />\n            <Searchbar propSubmit={addSearchValue} />\n        {loading && <Loader />}\n            <UlMovies>\n                {movies.map(({id, title, name, poster_path}) => (\n                  <LiMovies key={id}>\n                    <LinkMovies to={`${id}`} state={{ from: location }}>\n                      <ImgMovies src={poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg} alt={title ? title : name}/>\n                      <PMovies>{title ? title : name}</PMovies>\n                    </LinkMovies>\n                  </LiMovies>\n                ))}\n            </UlMovies>\n            {errorM && <h2>Whoops, something went wrong: error.</h2>}\n    </div>\n  );\n};"],"names":["SpinnerWrapper","styled","CircularProgress","API_KEY","BASE_URL","fetchTrendCollection","axios","fetchMovieByKeyWord","value","fetchMovieById","filmId","fetchMovieCredits","movieId","fetchMovieReviews","Main","UlHome","LinkHome","Link","LiHome","ImgHome","PHome","H1","noPosterImg","HomePage","useState","movies","setMovies","errorM","setErrorM","loading","setLoading","location","useLocation","useEffect","then","data","results","catch","error","finally","setTimeout","Loader","map","id","title","name","poster_path","to","state","from","src","alt","Box","Form","Input","Button","propSubmit","inputFilmValue","setInputFilmValue","onSubmit","e","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","UlMovies","LinkMovies","LiMovies","ImgMovies","PMovies","MoviesPage","useSearchParams","searchParams","setSearchParams","searchFilmValue","get","length","position","formData"],"sourceRoot":""}