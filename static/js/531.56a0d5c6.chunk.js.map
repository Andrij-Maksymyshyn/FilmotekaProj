{"version":3,"file":"static/js/531.56a0d5c6.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","fetchApi/fetchApi.js","pages/HomePage.styled.jsx","pages/HomePage.jsx","pages/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;","import { SpinnerWrapper } from './Loader.styled';\nimport { CircularProgress } from '@mui/material';\n\nconst Loader = () => (\n  <SpinnerWrapper>\n    <CircularProgress />       \n  </SpinnerWrapper>\n);\n\nexport default Loader;\n\n\n","import axios from 'axios';\n\nconst API_KEY = '3b94c1b54af7d429587ecf26a37007c0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendCollection() {\n    return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    };\n\nexport async function fetchMovieByKeyWord(value) {\n    return await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`);\n};\n\nexport async function fetchMovieById(filmId) {\n  return await axios.get(`${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`);  \n};\n\n\n\nexport async function fetchMovieCredits(movieId) {\n  return await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n \n\nexport async function fetchMovieReviews(movieId) {\n  return await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);  \n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n    padding: 0 20px;\n`;\n\nexport const UlHome = styled.ul`\n  padding: 0;\n  margin-left: -20px;\n  margin-top: -20px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  list-style: none;\n    `;\n\nexport const LinkHome = styled(Link)`\n  padding: 0;\n  width: 100%;\n  text-decoration: none;\n  color: black;\n`;\n\nexport const LiHome = styled.li`\n  margin-left: 20px;\n  margin-top: 20px;\n  max-width: 280px;\n  flex-basis: calc(100% - 20px);\n  border-radius: 5px;\n  overflow: hidden;\n  background: #fafafa;\n  transition: all 500ms ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ImgHome = styled.img`\ndisplay: block;\nwidth: 100%;\nheight: 398px;\nobject-fit: cover;\n`;\n\nexport const PHome = styled.p`\n  margin-top: 12px;\n  padding: 0 4px;\n  text-align: center;\n  font-weight: 700;\n  line-height: 1.33;\n  text-transform: uppercase;\n`;\n\nexport const H1 = styled.h1`\ntext-align: center;\n`;","import { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { fetchTrendCollection } from '../fetchApi/fetchApi';\nimport Loader from '../components/Loader';\nimport { Main, UlHome, LinkHome, ImgHome, LiHome, PHome, H1 } from './HomePage.styled';\n\n\nexport const noPosterImg = 'https://sd.keepcalms.com/i/sorry-no-picture-available-2.png';\n\n\n\nexport function HomePage() {\n    const [movies, setMovies] = useState([]);\n    const [errorM, setErrorM] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n    \n\n    \n    useEffect(() => {\n        setLoading(true);\n        \n        fetchTrendCollection().then(data => {\n            const { data: { results } } = data;\n            setMovies(results);\n        })\n            \n            .catch(error => {\n                setErrorM(error)\n            })\n            \n            .finally(() => {\n                setTimeout(() => {\n                    setLoading(false)\n                }, 1000)\n            }); \n\n    }, []);\n\n\n    return (\n        <Main>\n             {loading && <Loader/>}\n            <H1>Trending today</H1>\n            <UlHome>\n                {movies.map(({id, title, name, poster_path}) => (\n                    <LiHome key={id}>\n                        <LinkHome to={`/movies/${id}`} state={{ from: location }}>                            \n                                <ImgHome src={poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg} alt={title ? title : name} />\n                                <PHome>{title ? title : name}</PHome>                           \n                        </LinkHome>\n                    </LiHome>\n                ))}\n            </UlHome>\n            {errorM && <h2>Whoops, something went wrong: error.</h2>}\n            </Main>\n    )\n};\n","import styled from 'styled-components';\nimport { Link, NavLink} from \"react-router-dom\";\n\nexport const Main = styled.main`\n    padding: 20px;\n`;\n\nexport const Box = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const Img = styled.img`\ndisplay: block;\nwidth: 100%;\nheight: auto;\n`;\n\nexport const Div1 = styled.div`\nmax-width: 250px;\n`;\n\nexport const Div2 = styled.div`\npadding-left: 20px;\n`;\n\nexport const Button = styled.button`\nmargin-bottom: 10px;\n    background-color: darkgoldenrod;\n    border: none;\n    border-radius: 5px;\n    height: 25px;\n    opacity: 0.8;\n\n    &:hover, &:focus {\n    opacity: 1;\n  }\n    `;\n\nexport const LinkStyled = styled(Link)`\ncolor: black;\n`;\n\nexport const LinkStyledAddIn = styled(NavLink)`\ncolor: black;\ntext-decoration: none;\nfont-weight: 500;\n\n&.active {\n    color: blue;\n}\n`;\n\nexport const Uldet = styled.ul`\nlist-style: none;\n`;\n\n","import { useState, useEffect, useRef } from \"react\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport { fetchMovieById } from '../fetchApi/fetchApi';\nimport { Toaster, toast } from 'react-hot-toast';\nimport Loader from '../components/Loader';\nimport { Main, Box, Div1, Div2, Img, LinkStyled, Button, LinkStyledAddIn, Uldet } from './MovieDetailsPage.styled';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { noPosterImg } from './HomePage';\n\n\n  \n\nexport function MovieDetailsPage() {\n    const { moviesId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n    const grandPath = useRef(location);\n\n    \n    useEffect(() => {\n\n        setLoading(true);    \n        \n        fetchMovieById(moviesId).then(data => {\n            const { data: { poster_path, title, name, overview, vote_average, genres } } = data;                \n               \n                                               \n            setMovie({\n                poster: poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg,\n                title,\n                name,\n                overview: overview ? overview : \"There is no overview\",\n                vote_average,\n                genresValues: (genres.length === 0) ?\n                    \"There are no genres\" :\n                    (genres.map(({ name }) => (\n                        [name]\n                    )).join(\", \"))\n            });\n\n        })\n            \n            .catch(error => {\n                console.log('Whoops, something went wrong...', error);\n                return toast.error('There is no film. Try another request...');\n            })\n\n            .finally(() => setTimeout(() => {\n                setLoading(false);\n            }, 1000));       \n        \n    }, [moviesId]);\n    \n      \n\n    return (\n        \n        <Main>\n            \n            <Toaster position=\"top-right\" />\n            {loading && <Loader />}\n            \n            <Button type=\"button\"><LinkStyled to={grandPath.current?.state?.from ?? `/`} state={{ from: grandPath.current }}><FaArrowLeft />Go back</LinkStyled></Button>\n                \n            {movie && (\n                <Box>\n                    <Div1>\n                        <Img src={movie.poster} alt={movie.title ? movie.title : movie.name} />\n                    </Div1>\n                    <Div2>\n                    <h1>{movie.title ? movie.title : movie.name}</h1>\n                    <p>User Score: {movie.vote_average * 10}%</p>\n                    <h2>Overview</h2>\n                    <p>{movie.overview}</p>\n                    <h3>Genres</h3>\n                    <p>{movie.genresValues}</p>\n                    </Div2>      \n                </Box>                    \n            )}\n\n            <hr />\n\n            <h3>Additional information</h3>\n\n             <Uldet>\n          <li>\n            <LinkStyledAddIn to={`/movies/${moviesId}/cast`} >\n              Cast\n            </LinkStyledAddIn>\n          </li>\n          <li>\n            <LinkStyledAddIn to={`/movies/${moviesId}/reviews`} >\n              Reviews\n            </LinkStyledAddIn>\n          </li>\n            </Uldet>\n            \n            <hr/>            \n            \n            <Outlet/>\n            \n                                          \n        </Main>\n    )\n};"],"names":["SpinnerWrapper","styled","CircularProgress","API_KEY","BASE_URL","fetchTrendCollection","axios","fetchMovieByKeyWord","value","fetchMovieById","filmId","fetchMovieCredits","movieId","fetchMovieReviews","Main","UlHome","LinkHome","Link","LiHome","ImgHome","PHome","H1","noPosterImg","HomePage","useState","movies","setMovies","errorM","setErrorM","loading","setLoading","location","useLocation","useEffect","then","data","results","catch","error","finally","setTimeout","Loader","map","id","title","name","poster_path","to","state","from","src","alt","Box","Img","Div1","Div2","Button","LinkStyled","LinkStyledAddIn","NavLink","Uldet","MovieDetailsPage","moviesId","useParams","movie","setMovie","grandPath","useRef","overview","vote_average","genres","poster","genresValues","length","join","console","log","toast","position","type","current"],"sourceRoot":""}