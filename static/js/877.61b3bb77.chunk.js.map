{"version":3,"file":"static/js/877.61b3bb77.chunk.js","mappings":"sLAEaA,E,OAAiBC,GAAAA,IAAH,8F,mBCO3B,EANe,kBACb,SAACD,EAAD,WACE,SAACE,EAAA,EAAD,Q,0MCHEC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACUC,IAAAA,IAAA,UAAaF,EAAb,uCAAoDD,IAD9D,0GAIA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,iFACUF,IAAAA,IAAA,UAAaF,EAAb,iCAA8CD,EAA9C,kBAA+DK,EAA/D,yBADV,0GAIA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQJ,IAAAA,IAAA,UAAaF,EAAb,kBAA+BM,EAA/B,oBAAiDP,IADzD,0GAMA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,iFACQN,IAAAA,IAAA,UAAaF,EAAb,kBAA+BQ,EAA/B,4BAA0DT,IADlE,0GAKA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,iFACQN,IAAAA,IAAA,UAAaF,EAAb,kBAA+BQ,EAA/B,4BAA0DT,IADlE,4G,kMCrBMW,EAAOb,EAAAA,GAAAA,KAAH,8CAIJc,EAASd,EAAAA,GAAAA,GAAH,+KAUNe,GAAWf,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,kGAORiB,EAASjB,EAAAA,GAAAA,GAAH,mRAcNkB,EAAUlB,EAAAA,GAAAA,IAAH,2FAOPmB,EAAQnB,EAAAA,GAAAA,EAAH,gKASLoB,EAAKpB,EAAAA,GAAAA,GAAH,6C,SC/CFqB,EAAc,8DAIpB,SAASC,IACZ,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAyBjB,OArBAC,EAAAA,EAAAA,YAAU,WACNH,GAAW,IAEXzB,EAAAA,EAAAA,MAAuB6B,MAAK,SAAAC,GACxB,IAAgBC,EAAcD,EAAtBA,KAAQC,QAChBV,EAAUU,MAGTC,OAAM,SAAAC,GACHV,EAAUU,MAGbC,SAAQ,WACLC,YAAW,WACPV,GAAW,KACZ,UAGZ,KAIC,UAAChB,EAAD,WACMe,IAAW,SAACY,EAAA,EAAD,KACb,SAACpB,EAAD,8BACA,SAACN,EAAD,UACKU,EAAOiB,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,YAAnB,OACR,SAAC5B,EAAD,WACI,UAACF,EAAD,CAAU+B,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMlB,GAA9C,WACQ,SAACZ,EAAD,CAAS+B,IAAKJ,EAAe,kCAAoCA,EAAexB,EAAa6B,IAAKP,GAAgBC,KAClH,SAACzB,EAAD,UAAQwB,GAAgBC,QAHvBF,QAQpBhB,IAAU","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","fetchApi/fetchApi.js","pages/HomePage.styled.jsx","pages/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SpinnerWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;","import { SpinnerWrapper } from './Loader.styled';\nimport { CircularProgress } from '@mui/material';\n\nconst Loader = () => (\n  <SpinnerWrapper>\n    <CircularProgress />       \n  </SpinnerWrapper>\n);\n\nexport default Loader;\n\n\n","import axios from 'axios';\n\nconst API_KEY = '3b94c1b54af7d429587ecf26a37007c0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendCollection() {\n    return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    };\n\nexport async function fetchMovieByKeyWord(value) {\n    return await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&include_adult=false`);\n};\n\nexport async function fetchMovieById(filmId) {\n  return await axios.get(`${BASE_URL}/movie/${filmId}?api_key=${API_KEY}`);  \n};\n\n\n\nexport async function fetchMovieCredits(movieId) {\n  return await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n \n\nexport async function fetchMovieReviews(movieId) {\n  return await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);  \n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.main`\n    padding: 0 20px;\n`;\n\nexport const UlHome = styled.ul`\n  padding: 0;\n  margin-left: -20px;\n  margin-top: -20px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  list-style: none;\n    `;\n\nexport const LinkHome = styled(Link)`\n  padding: 0;\n  width: 100%;\n  text-decoration: none;\n  color: black;\n`;\n\nexport const LiHome = styled.li`\n  margin-left: 20px;\n  margin-top: 20px;\n  max-width: 280px;\n  flex-basis: calc(100% - 20px);\n  border-radius: 5px;\n  overflow: hidden;\n  background: #fafafa;\n  transition: all 500ms ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ImgHome = styled.img`\ndisplay: block;\nwidth: 100%;\nheight: 398px;\nobject-fit: cover;\n`;\n\nexport const PHome = styled.p`\n  margin-top: 12px;\n  padding: 0 4px;\n  text-align: center;\n  font-weight: 700;\n  line-height: 1.33;\n  text-transform: uppercase;\n`;\n\nexport const H1 = styled.h1`\ntext-align: center;\n`;","import { useState, useEffect } from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { fetchTrendCollection } from '../fetchApi/fetchApi';\nimport Loader from '../components/Loader';\nimport { Main, UlHome, LinkHome, ImgHome, LiHome, PHome, H1 } from './HomePage.styled';\n\n\nexport const noPosterImg = 'https://sd.keepcalms.com/i/sorry-no-picture-available-2.png';\n\n\n\nexport function HomePage() {\n    const [movies, setMovies] = useState([]);\n    const [errorM, setErrorM] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const location = useLocation();\n    \n\n    \n    useEffect(() => {\n        setLoading(true);\n        \n        fetchTrendCollection().then(data => {\n            const { data: { results } } = data;\n            setMovies(results);\n        })\n            \n            .catch(error => {\n                setErrorM(error)\n            })\n            \n            .finally(() => {\n                setTimeout(() => {\n                    setLoading(false)\n                }, 1000)\n            }); \n\n    }, []);\n\n\n    return (\n        <Main>\n             {loading && <Loader/>}\n            <H1>Trending today</H1>\n            <UlHome>\n                {movies.map(({id, title, name, poster_path}) => (\n                    <LiHome key={id}>\n                        <LinkHome to={`/movies/${id}`} state={{ from: location }}>                            \n                                <ImgHome src={poster_path ? ('https://image.tmdb.org/t/p/w500' + poster_path) : noPosterImg} alt={title ? title : name} />\n                                <PHome>{title ? title : name}</PHome>                           \n                        </LinkHome>\n                    </LiHome>\n                ))}\n            </UlHome>\n            {errorM && <h2>Whoops, something went wrong: error.</h2>}\n            </Main>\n    )\n};\n"],"names":["SpinnerWrapper","styled","CircularProgress","API_KEY","BASE_URL","fetchTrendCollection","axios","fetchMovieByKeyWord","value","fetchMovieById","filmId","fetchMovieCredits","movieId","fetchMovieReviews","Main","UlHome","LinkHome","Link","LiHome","ImgHome","PHome","H1","noPosterImg","HomePage","useState","movies","setMovies","errorM","setErrorM","loading","setLoading","location","useLocation","useEffect","then","data","results","catch","error","finally","setTimeout","Loader","map","id","title","name","poster_path","to","state","from","src","alt"],"sourceRoot":""}